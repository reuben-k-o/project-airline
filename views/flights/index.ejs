<% layout("layouts/boilerplate") %>
<!-- prettier -->
<% let date = new Date(); date.setDate(date.getDate() + 1); date =
date.toLocaleDateString("en-GB", {month: "2-digit",day: "2-digit",year:
"numeric"}).split("/").join(".") %>

<form action="/" method="post" novalidate>
  <div>
    <div class="center">
      <div class="input-group input-group-lg">
        <label for="from" class="form-control heading-label"
          ><i class="fas fa-plane-departure"></i> FROM</label
        >
        <label for="to" class="form-control heading-label">
          <i class="fas fa-plane-arrival"></i> TO</label
        >
        <label for="date" class="form-control heading-label"
          ><i class="fas fa-calendar"></i> DEPARTURE</label
        >
        <label for="passengerCount" class="form-control heading-label">
          <i class="fas fa-person"></i>TRAVELLERS</label
        >
      </div>
      <div class="input-group input-group-lg">
        <input
          list="airports"
          type="text"
          aria-label="from"
          class="form-control index-input"
          value=""
          name="from"
          value=""
          name="from"
          placeholder="city or airport"
          autocomplete="false"
          required
        />
        <input
          list="airports"
          type="text"
          aria-label="to"
          class="form-control index-input"
          value=""
          name="to"
          autocomplete="false"
          value=""
          name="to"
          autocomplete="false"
          placeholder="city or airport"
          required
        />
        <datalist id="airports">
          <% for (let airport of airports) { %>

          <option value="<%= airport.IATA_code %>"></option>

          <option value="<%=airport.IATA_code %>">
            <%= airport.city_name %>
          </option>
          <% } %>
        </datalist>
        <input
          type="text"
          id="datepicker"
          aria-label="date"
          class="form-control index-input"
          name="date"
          placeholder="departing"
          autocomplete="false"
          required
        />
        <select class="form-control" name="passengerCount" required>
          <option value="1">1</option>
          <option value="2">2</option>
          <option value="3">3</option>
          <option value="4">4</option>
          <option value="5">5</option>
          <option value="6">6</option>
        </select>
      </div>
      <div class="bt">
        <div
          class="btn-group"
          role="group"
          aria-label="Basic radio toggle button group"
        >
          <input
            type="radio"
            class="btn-check"
            name="group"
            id="group1"
            autocomplete="off"
            value="Economy"
            checked
          />
          <label class="btn btn-outline-secondary" for="group1">Economy</label>

          <input
            type="radio"
            class="btn-check"
            name="group"
            id="group2"
            autocomplete="off"
            value="Premium"
          />
          <label class="btn btn-outline-secondary" for="group2">Premium</label>

          <input
            type="radio"
            class="btn-check"
            name="group"
            id="group3"
            autocomplete="off"
            value="Business"
          />
          <label class="btn btn-outline-secondary" for="group3">Business</label>
        </div>

        <button type="submit" class="btn btn-danger btn-lg button">
          SEARCH
        </button>
      </div>
    </div>
  </div>
</form>

<script src="/scripts/datePicker.js"></script>
<script>
  (function (g, u, i, d, e, s) {
    g[e] = g[e] || [];
    var f = u.getElementsByTagName(i)[0];
    var k = u.createElement(i);
    k.async = true;
    k.src =
      "https://static.userguiding.com/media/user-guiding-" + s + "-embedded.js";
    f.parentNode.insertBefore(k, f);
    if (g[d]) return;
    var ug = (g[d] = { q: [] });
    ug.c = function (n) {
      return function () {
        ug.q.push([n, arguments]);
      };
    };
    var m = [
      "previewGuide",
      "finishPreview",
      "track",
      "identify",
      "triggerNps",
      "hideChecklist",
      "launchChecklist",
    ];
    for (var j = 0; j < m.length; j += 1) {
      ug[m[j]] = ug.c(m[j]);
    }
  })(
    window,
    document,
    "script",
    "userGuiding",
    "userGuidingLayer",
    "952817708ID"
  );
</script>
